using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.OleDb;

public partial class SecondForm2 : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        string MySQL = Server.UrlDecode(Request.QueryString["Cause"].ToString());
        string l = Server.UrlDecode(Request.QueryString["loc"].ToString());


        string connectString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + Server.MapPath("guestbook.mdb");
        OleDbConnection cn = new OleDbConnection(connectString);
        cn.Open();
        string selectString = "SELECT NameofOrganisation,Website,Cause, Location FROM NGObasicOLD where Cause in ('" + MySQL + "') or Location in ('" + l + "')";


        OleDbCommand cmd = new OleDbCommand(selectString, cn);
        OleDbDataReader reader = cmd.ExecuteReader();

	//Set a table width.
	DisplayTable.Width = Unit.Percentage(10.00);
	//Create a new row for adding a table heading.
	TableRow tableHeading = new TableRow();

	//Create and add the cells that contain the ID column heading text.
	//TableHeaderCell IDHeading = new TableHeaderCell();
	//IDHeading.Text = "ID";
	//IDHeading.HorizontalAlign = HorizontalAlign.Left;
	//tableHeading.Cells.Add(IDHeading);
			
	//Create and add the cells that contain the project Name column heading text.
	TableHeaderCell projectNameHeading = new TableHeaderCell();
	projectNameHeading.Text = "NameofOrganisation";
	projectNameHeading.HorizontalAlign = HorizontalAlign.Left;
	tableHeading.Cells.Add(projectNameHeading);
			




//Create and add the cells that contain the causes column heading text.
	TableHeaderCell websiteHeading = new TableHeaderCell();
	websiteHeading.Text = "Website";
	websiteHeading.HorizontalAlign = HorizontalAlign.Left;
	tableHeading.Cells.Add(websiteHeading);

   

   

        TableHeaderCell eduHeading = new TableHeaderCell();
	eduHeading.Text = "Cause";
	eduHeading.HorizontalAlign = HorizontalAlign.Left;
	tableHeading.Cells.Add(eduHeading);



//Create and add the cells that contain the location column heading text.
	TableHeaderCell locHeading = new TableHeaderCell();
	locHeading.Text = "Location";
	locHeading.HorizontalAlign = HorizontalAlign.Left;
	tableHeading.Cells.Add(locHeading);

//Create and add the cells that contain the education column heading text.
	

	DisplayTable.Rows.Add(tableHeading);

	//Loop through the resultant data selection and add the data value	
	while(reader.Read())
	{
        TableRow detailsRow = new TableRow();
		//TableRow detailsRow = new TableRow();
		//TableCell IDCell = new TableCell();
		//IDCell.Text = reader["ID"].ToString();
		//detailsRow.Cells.Add(IDCell);


		TableCell projectNameCell = new TableCell();
		projectNameCell.Text = reader["NameofOrganisation"].ToString();
		detailsRow.Cells.Add(projectNameCell);

		TableCell ngoCell = new TableCell();
		ngoCell.Text = reader["Website"].ToString();
		detailsRow.Cells.Add(ngoCell);



		TableCell causeCell = new TableCell();
		causeCell.Text = reader["Cause"].ToString();
		detailsRow.Cells.Add(causeCell);


		TableCell ageGroupCell = new TableCell();
		ageGroupCell.Text = reader["Location"].ToString();
		detailsRow.Cells.Add(ageGroupCell);

	



		


		DisplayTable.Rows.Add(detailsRow);

	}

         //Close the reader and the related connection.
	reader.Close();
	cn.Close();
}


    }

    
    
    
    
    
    
    
